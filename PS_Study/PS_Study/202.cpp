/*

Prob No.202 : 기숙사 청소하기 [CH02.2.Algorithm(Design)]

Time Limit(Test case) : 3000(ms)
Total Submit : 292    Accepted : 48
--------------------------------------------------------------------------------

 The Champion of this Problem (C++) : k5888200


 Background
 GSHS의 학생들이 간식을 마구 먹고 버린 뒤 청소를 하지 않아 기숙사가 많이 더러워졌다. 

결국 기숙사를 청소하기로 결정을 하고 n(1<=n<=100,000)명의 학생들을 선발하여 T(n<=T<=100,000,000)분동안 청소를 한다.
 
쓰레기는 g(1<=g<=1,000,000,000)개 만큼이나 쌓여 있어서 청소는 1분마다 한 사람씩 돌아가면서 하기로 했다. 

n명이 다 한 번씩 치웠으면 다시 첫 학생부터 청소를 한다. 

선생님은 처음 청소 시작하는 시간에 감독을 하고 t(1<=t<=T)분 간격으로 감독하러 온다. 

학생들은 한번에 p(1<=p<=100)개의 쓰레기를 치울 수 있다. 

하지만 TshoT나 Nextpeace 같은 학생들은 청소하는 것을 그리 좋아하지 않는다. 

그렇기 때문에 그들은 한번에 p개의 쓰레기를 치울 수 있지만 선생님이 감독을 하지 않으면 q(1<=q<=p)개의 쓰레기만 치우려고 한다. 

운이 없게도 이번에는 교장 선생님이 친히 감독을 하시겠다고 하여 선생님이 감독을 할 때는 꼭 p개의 쓰레기를 치워야 한다. 

물론 sangeoul이나 ccelest 같은 착한 학생들도 있어서 그들은 자신의 차례가 오면 감독과 관계없이 꼭 p개의 쓰레기를 치운다. 

청소를 끝내는데 걸리는 시간은 몇 분인가? 

주의) 교장선생님은 처음 시작 때 감독을 한 뒤에 t분마다 감독을 돈다. 곧 t=4이면 4, 8, 12 ...가 아니라 1, 5, 9, 13 ... 이렇게 감독을 돈다. 
Input
첫째 줄에 학생 수 n, 쌓인 쓰레기 수 g 청소 제한 시간 T, 감독 도는 주기 t, 한번에 치울수 있는 쓰레기의 최대 양 p, 선생님이 감독을 돌지 않을때 착하지 않은 학생들이 치우는 쓰레기의 양 q 가 차례대로 주어진다.
 그리고 다음 줄부터 n+1줄 까지는 학생이 착한지 착하지 않은지가 주어진다. 
착한 학생은 1, 착하지 않은 학생은 0이다. 
Output
쓰레기를 치우는데 걸리는 시간을 출력한다(분 단위). 제한된 시간 내에 쓰레기를 치울 수 없으면 “Dirty Dormitory!"를 출력한다. 
IO Example
입출력예시 1> 
입력 
5 30 10 3 5 2 
1 
0 
0 
1 
0 

출력 
9 

--------------------------------------------------------------------------------

입출력예시 2> 
입력 
5 30 6 3 5 2 
1 
0 
0 
1 
0 

출력 
Dirty Dormitory!
--------------------------------------------------------------------------------
출제 : 이진우(GSHS 26th) 
*/
// n명의 학생, g개의 쓰레기를, T분만큼, t분마다 감독, p개의만큼의 착한학생 또는 감독일때, q개는 착하지 않은 학생
#include<cstdio>
int n,g,T,t,p,q,count,flag,nd[100000];
int main(){
	int i,j,hs;
	scanf("%d%d%d%d%d%d",&n,&g,&T,&t,&p,&q);
	for(i=0;i<n;i++)
		scanf("%d",&nd[i]);
	for(i=1,j=0;;j=(i-1)%n){		
		if(nd[j] || i%t==1 || t==1)
			g=g-p;
		else g=g-q;
		count++;
		if(g<=0) break;
		if(i++>=T){
			flag=1;
			break;
		}
	}
	if(flag)printf("Dirty Dormitory!");
	else printf("%d",count);
	return 0;
}

